{"mappings":"AAAA;AAEA,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,oBAAoB,SAAS,aAAa,CAAC;AACjD,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,gBAAgB,SAAS,aAAa,CAAC;AAC7C,MAAM,gBAAgB,SAAS,aAAa,CAAC;AAC7C,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,iBAAiB,SAAS,aAAa,CAAC;AAC9C,qEAAqE;AACrE,oEAAoE;AAEpE,MAAM;IACJ,kBAAkB;IAClB,SAAS;QAAC;QAAW;QAAY;QAAS;QAAS;QAAO;QAAQ;QAAQ;QAAU;QAAa;QAAW;QAAY;KAAW,CAAC;IACpI,OAAO,IAAI,OAAO;IAClB,KAAK,AAAC,CAAA,KAAK,GAAG,KAAK,EAAC,EAAG,KAAK,CAAC,KAAK;IAClC,SAAS,EAAE;IACX,YAAY,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAE;QACtC,IAAI,CAAC,MAAM,GAAG,QAAQ,WAAW;QACjC,IAAI,CAAC,QAAQ,GAAG,UAAU,KAAK;QAC/B,IAAI,CAAC,QAAQ,GAAG,UAAU,IAAI;IAChC;IACA,UAAU;QACR,IAAI,CAAC,UAAU,GAAG,CAAC,EACjB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAC9C,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,EAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAClC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC;IAC/B;AACF;AAEA,MAAM,gBAAgB;IACpB,OAAO,UAAU;IACjB,YAAY,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAE;QAC/C,KAAK,CAAC,QAAQ,UAAU;QACxB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,OAAO;IACd;IACA,UAAU;QACR,SAAS;QACT,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;QACzC,OAAO,IAAI,CAAC,IAAI;IAClB;AACF;AACA,MAAM,gBAAgB;IACpB,OAAO,UAAU;IACjB,YAAY,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE;QAChD,KAAK,CAAC,QAAQ,UAAU;QACxB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,OAAO;IACd;IACA,WAAW;QACT,OAAO;QACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAI,CAAA,IAAI,CAAC,QAAQ,GAAG,EAAC;QAC/C,OAAO,IAAI,CAAC,KAAK;IACnB;AACF;AAEA,mEAAmE;AAEnE,kEAAkE;AAClE,MAAM;IACJ,CAAC,GAAG,CAAC;IACL,CAAC,WAAW,CAAC;IACb,CAAC,OAAO,CAAC;IACT,CAAC,SAAS,GAAG,GAAG;IAChB,WAAW,EAAE,CAAC;IACd,aAAc;QACZ,eAAe;QACf,IAAI,CAAC,YAAY;QACjB,sBAAsB;QACtB,IAAI,CAAC,kBAAkB;QACvB,gCAAgC;QAChC,UAAU,gBAAgB,CAAC,UAAU,IAAI,CAAC,qBAAqB;QAC/D,KAAK,gBAAgB,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI;QAE1D,kBAAkB,gBAAgB,CAChC,SACA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI;IAEnC;IACA,iBAAiB,CAAC,EAAE;QAClB,MAAM,KAAK,EAAE,MAAM;QACnB,MAAM,YAAY,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,WAAW;QAChB,qCAAqC;QACrC,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChC,CAAA,OAAQ,KAAK,EAAE,KAAK,UAAU,OAAO,CAAC,EAAE;QAE1C,wCAAwC;QACxC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,MAAM,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE;YACjD,SAAS,IAAI;YACb,KAAK;gBAAE,UAAU;YAAE;QACrB;QACA,QAAQ,MAAM;QACd,QAAQ,GAAG,CAAC;IACd;IACA,eAAe;QACb,UAAU,WAAW,CAAC,kBAAkB,CACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,GAC/B,WAAY;YACV,MAAM;QACR;IAEJ;IACA,iBAAiB,QAAQ,EAAE;QACzB,MAAM,EAAE,SAAQ,EAAE,GAAG,SAAS,MAAM;QACpC,MAAM,EAAE,UAAS,EAAE,GAAG,SAAS,MAAM;QACrC,wEAAwE;QACxE,MAAM,SAAS;YAAC;YAAU;SAAU;QACpC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,OAAO,OAAO,CAAC,QAAQ,IAAI,CAAC,CAAC,SAAS;QAExD,EAAE,SAAS,CAAC,sDAAsD;YAChE,aACE;QACJ,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG;QAElB,EAAE,MAAM,CAAC,QACN,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EACf,SAAS,CACR,EAAE,KAAK,CAAC;YACN,UAAU;YACV,UAAU;YACV,WAAW,KAAK;YAChB,cAAc,KAAK;QACrB,IAED,eAAe,CAAC,iBAChB,SAAS;QACZ,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;QAC9C,sCAAsC;QACtC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,UAAW;YAC/B,IAAI,CAAC,oBAAoB,CAAC;QAC5B;IACF;IACA,UAAU,IAAI,EAAE;QACd,IAAI,CAAC,CAAC,WAAW,GAAG;QACpB,KAAK,SAAS,CAAC,MAAM,CAAC;QACtB,cAAc,KAAK;IACrB;IAEA,YAAY;QACV,KAAK,SAAS,CAAC,GAAG,CAAC;QACnB,KAAK,KAAK,CAAC,OAAO,GAAG;QACrB,WAAW,IAAM;YACf,KAAK,KAAK,CAAC,OAAO,GAAG;QACvB,GAAG;IACL;IACA,wBAAwB;QACtB,8DAA8D;QAC9D,eAAe,OAAO,CAAC,cAAc,SAAS,CAAC,MAAM,CAAC;QACtD,aAAa,OAAO,CAAC,cAAc,SAAS,CAAC,MAAM,CAAC;IACtD;IACA,YAAY,CAAC,EAAE;QACb,EAAE;QACF,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ;QACzB,MAAM,gBAAgB,CAAC,GAAG,UACxB,QAAQ,KAAK,CAAC,CAAA,MAAO,OAAO,QAAQ,CAAC;QACvC,MAAM,oBAAoB,CAAC,GAAG,UAAY,QAAQ,KAAK,CAAC,CAAA,MAAO,MAAM;QAErE,EAAE,cAAc;QAChB,8BAA8B;QAC9B,MAAM,OAAO,UAAU,KAAK;QAC5B,MAAM,WAAW,CAAC,cAAc,KAAK;QACrC,MAAM,WAAW,CAAC,cAAc,KAAK;QACrC,MAAM,UAAU,CAAC,aAAa,KAAK;QACnC,MAAM,YAAY,CAAC,eAAe,KAAK;QACvC,MAAM,EAAE,IAAG,EAAE,IAAG,EAAE,GAAG,IAAI,CAAC,CAAC,WAAW,CAAC,MAAM;QAC7C,uDAAuD;QACvD,IAAI,SAAS,WAAW;YACtB,8CAA8C;YAC9C,IACE,CAAC,cAAc,UAAU,UAAU,YACnC,CAAC,kBAAkB,UAAU,UAAU,UAEvC,OAAO,MAAM;YACf,IAAI,CAAC,CAAC,OAAO,GAAG,IAAI,QAAQ;gBAAC;gBAAK;aAAI,EAAE,UAAU,UAAU;QAC9D,CAAC;QACD,8DAA8D;QAC9D,IAAI,SAAS,WAAW;YACtB,IACE,CAAC,cAAc,UAAU,UAAU,cACnC,CAAC,kBAAkB,UAAU,UAAU,YAEvC,OAAO,MAAM;YACf,IAAI,CAAC,CAAC,OAAO,GAAG,IAAI,QAAQ;gBAAC;gBAAK;aAAI,EAAE,UAAU,UAAU;QAC9D,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO;QAChC,kDAAkD;QAClD,aAAa,KAAK,GAChB,cAAc,KAAK,GACnB,cAAc,KAAK,GACnB,eAAe,KAAK,GAClB;QACJ,wBAAwB;QACxB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,OAAO;QACvC,+BAA+B;QAC/B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,OAAO;QACzC,0DAA0D;QAC1D,IAAI,CAAC,cAAc;IACrB;IACA,iBAAiB;QACf,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC,IAAI,CAAC,QAAQ;IAC/D;IACA,qBAAqB;QACnB,MAAM,OAAO,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;QAC7C,IAAI,CAAC,MAAM;QACX,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,UAAW;YAC/B,IAAI,CAAC,sBAAsB,CAAC;QAC9B;IACA,qBAAqB;IACvB;IAEA,qBAAqB,OAAO,EAAE;QAC5B,EAAE,MAAM,CAAC,QAAQ,MAAM,EACpB,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EACf,SAAS,CACR,EAAE,KAAK,CAAC;YACN,UAAU;YACV,UAAU;YACV,WAAW,KAAK;YAChB,cAAc,KAAK;YACnB,WAAW,CAAC,EAAE,QAAQ,IAAI,CAAC,MAAM,CAAC;QACpC,IAED,eAAe,CACd,CAAC,EAAE,QAAQ,IAAI,KAAK,YAAY,oBAAS,cAAG,CAAC,CAAC,EAAE,QAAQ,UAAU,CAAC,CAAC,EAErE,SAAS;IACd;IACA,uBAAuB,OAAO,EAAE;QAC9B,IAAI,OAAO,CAAC;wCACwB,EAAE,QAAQ,IAAI,CAAC,WAAW,EAC5D,QAAQ,EAAE,CACX;yCACoC,EAAE,QAAQ,UAAU,CAAC;;4CAElB,EAC1B,QAAQ,IAAI,KAAK,YAAY,oBAAS,cAAG,CAC1C;6CAC4B,EAAE,QAAQ,QAAQ,CAAC;;;;;6CAKnB,EAAE,QAAQ,QAAQ,CAAC;;qBAE3C,CAAC;QAClB,IAAI,QAAQ,IAAI,KAAK,WACnB,QAAQ,CAAC;;6CAE8B,EAAE,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG;;;;;6CAK1B,EAAE,QAAQ,OAAO,CAAC;;;iBAG9C,CAAC;QAGd,IAAI,QAAQ,IAAI,KAAK,WACnB,QAAQ,CAAC;;6CAE8B,EAAE,QAAQ,KAAK,CAAC,OAAO,CAAC,GAAG;;;;;6CAK3B,EAAE,QAAQ,QAAQ,CAAC;;;iBAG/C,CAAC;QAEd,KAAK,kBAAkB,CAAC,YAAY;QACpC,IAAI,CAAC,SAAS;IAChB;IACA,eAAe;QACb,aAAa,UAAU,CAAC;QACxB,SAAS,MAAM;IACjB;AACF;AAEA,MAAM,MAAM,IAAI","sources":["script.js"],"sourcesContent":["'use strict';\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n/////////////////////////////////////////////////////////////////////\n// DATA ARCHITECTURE////////////////////////////////////////////////\n\nclass Workout {\n  // prettier-ignore\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n  clicks = 0;\n  constructor(coords, duration, distance) {\n    this.coords = coords; //[lng,lat]\n    this.duration = duration; //min\n    this.distance = distance; //km\n  }\n  getDate() {\n    this.stringDate = `${\n      this.name[0].toUpperCase() + this.name.slice(1)\n    } on ${this.date.getDate()} ${\n      this.months[this.date.getMonth()]\n    } ${this.date.getFullYear()}`;\n  }\n}\n\nclass Running extends Workout {\n  name = 'running';\n  constructor(coords, duration, distance, cadence) {\n    super(coords, duration, distance);\n    this.cadence = cadence;\n    this.getPace();\n    this.getDate();\n  }\n  getPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\nclass Cycling extends Workout {\n  name = 'cycling';\n  constructor(coords, duration, distance, elevGain) {\n    super(coords, duration, distance);\n    this.elevGain = elevGain;\n    this.getSpeed();\n    this.getDate();\n  }\n  getSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n///////////////////////////////////////////////////////////////////\n\n// APP ARCHITECTURE //////////////////////////////////////////////\nclass App {\n  #map;\n  #mapPosition;\n  #workout;\n  #zoomLevel = 13;\n  workouts = []; //push all workouts to this array\n  constructor() {\n    // get position\n    this._getPosition();\n    // get stored workouts\n    this._getStoredWorkouts();\n    // initialize the event listener\n    inputType.addEventListener('change', this._toggleElevationField);\n    form.addEventListener('submit', this._newWorkout.bind(this));\n\n    containerWorkouts.addEventListener(\n      'click',\n      this._goToMarkerOnMap.bind(this)\n    );\n  }\n  _goToMarkerOnMap(e) {\n    const El = e.target;\n    const workoutEl = El.closest('.workout');\n    if (!workoutEl) return;\n    // extract the workout from the array\n    const workout = this.workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n    //  move the map to the selected workout\n    this.#map.setView(workout.coords, this.#zoomLevel, {\n      animate: true,\n      pan: { duration: 1 },\n    });\n    workout.clicks++;\n    console.log(workout);\n  }\n  _getPosition() {\n    navigator.geolocation.getCurrentPosition(\n      this._loadMapPosition.bind(this),\n      function () {\n        alert('Your location can not be loaded');\n      }\n    );\n  }\n  _loadMapPosition(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    // console.log(`https://www.google.com/maps/@${latitude},${longitude}`);\n    const coords = [latitude, longitude];\n    this.#map = L.map('map').setView(coords, this.#zoomLevel);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    L.marker(coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 300,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n        })\n      )\n      .setPopupContent('you are here!')\n      .openPopup();\n    this.#map.on('click', this._showForm.bind(this));\n    // render markers after loading th map\n    this.workouts.forEach(workout => {\n      this._renderWorkoutMarker(workout);\n    });\n  }\n  _showForm(mapE) {\n    this.#mapPosition = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    form.classList.add('hidden');\n    form.style.display = 'none';\n    setTimeout(() => {\n      form.style.display = 'grid';\n    }, 1000);\n  }\n  _toggleElevationField() {\n    // the closest form row is the parent div containing the input\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n  _newWorkout(e) {\n    //\n    console.log(this.workouts);\n    const isValidInputs = (...entries) =>\n      entries.every(inp => Number.isFinite(inp));\n    const allPositiveInputs = (...entries) => entries.every(inp => inp > 0);\n\n    e.preventDefault();\n    // take the data from the form\n    const type = inputType.value;\n    const duration = +inputDuration.value;\n    const distance = +inputDistance.value;\n    const cadence = +inputCadence.value;\n    const elevation = +inputElevation.value;\n    const { lat, lng } = this.#mapPosition.latlng;\n    // if workout type is running => creat a running Object\n    if (type === 'running') {\n      // validate data (is a number and is positive)\n      if (\n        !isValidInputs(duration, distance, cadence) ||\n        !allPositiveInputs(duration, distance, cadence)\n      )\n        return alert('Input needs to be a positive number!');\n      this.#workout = new Running([lat, lng], duration, distance, cadence);\n    }\n    // if workout type is cycling => creat a cycling object Object\n    if (type === 'cycling') {\n      if (\n        !isValidInputs(duration, distance, elevation) ||\n        !allPositiveInputs(duration, distance, elevation)\n      )\n        return alert('Input needs to be a positive number!');\n      this.#workout = new Cycling([lat, lng], duration, distance, elevation);\n    }\n\n    this.workouts.push(this.#workout);\n    //////////////////////////////////////////////////\n    inputCadence.value =\n      inputDistance.value =\n      inputDuration.value =\n      inputElevation.value =\n        '';\n    // render workout marker\n    this._renderWorkoutMarker(this.#workout);\n    // render workout on te sidebar\n    this._renderWorkoutSideBare(this.#workout);\n    // store the workouts array in the navigator local storage\n    this._storeWorkouts();\n  }\n  _storeWorkouts() {\n    localStorage.setItem('workouts', JSON.stringify(this.workouts));\n  }\n  _getStoredWorkouts() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n    if (!data) return;\n    this.workouts = data;\n    this.workouts.forEach(workout => {\n      this._renderWorkoutSideBare(workout);\n    });\n    // console.log(data);\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 300,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.name}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.name === 'running' ? '🏃‍♂️' : '🚴'} ${workout.stringDate}`\n      )\n      .openPopup();\n  }\n  _renderWorkoutSideBare(workout) {\n    let html = `\n            <li class=\"workout workout--${workout.name}\" data-id=\"${\n      workout.id\n    }\">\n              <h2 class=\"workout__title\">${workout.stringDate}</h2>\n              <div class=\"workout__details\">\n                <span class=\"workout__icon\">${\n                  workout.name === 'running' ? '🏃‍♂️' : '🚴'\n                }</span>\n                <span class=\"workout__value\">${workout.distance}</span>\n                <span class=\"workout__unit\">km</span>\n              </div>\n              <div class=\"workout__details\">\n                <span class=\"workout__icon\">⏱</span>\n                <span class=\"workout__value\">${workout.duration}</span>\n                <span class=\"workout__unit\">min</span>\n              </div> `;\n    if (workout.name === 'running') {\n      html += `<div class=\"workout__details\">\n                <span class=\"workout__icon\">⚡️</span>\n                <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n                <span class=\"workout__unit\">min/km</span>\n              </div>\n              <div class=\"workout__details\">\n                <span class=\"workout__icon\">🦶🏼</span>\n                <span class=\"workout__value\">${workout.cadence}</span>\n                <span class=\"workout__unit\">spm</span>\n              </div>\n            </li>`;\n    }\n\n    if (workout.name === 'cycling') {\n      html += `<div class=\"workout__details\">\n                <span class=\"workout__icon\">⚡️</span>\n                <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n                <span class=\"workout__unit\">km/h</span>\n              </div>\n              <div class=\"workout__details\">\n                <span class=\"workout__icon\">⛰</span>\n                <span class=\"workout__value\">${workout.elevGain}</span>\n                <span class=\"workout__unit\">m</span>\n              </div>\n            </li>`;\n    }\n    form.insertAdjacentHTML('afterend', html);\n    this._hideForm();\n  }\n  clearStorage() {\n    localStorage.removeItem('workouts');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}